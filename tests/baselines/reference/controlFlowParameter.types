//// [tests/cases/conformance/controlFlow/controlFlowParameter.ts] ////

=== controlFlowParameter.ts ===
function f1(
>f1 : (required?: unknown) => void
>   : ^        ^^^       ^^^^^^^^^

  required: unknown = (() => {
>required : unknown
>         : ^^^^^^^
>(() => {    throw new Error("bad");  })() : never
>                                          : ^^^^^
>(() => {    throw new Error("bad");  }) : () => never
>                                        : ^^^^^^^^^^^
>() => {    throw new Error("bad");  } : () => never
>                                      : ^^^^^^^^^^^

    throw new Error("bad");
>new Error("bad") : Error
>                 : ^^^^^
>Error : ErrorConstructor
>      : ^^^^^^^^^^^^^^^^
>"bad" : string
>      : ^^^^^^

  })()
) {
  console.log("ok"); // should not trigger 'Unreachable code detected.'
>console.log("ok") : void
>                  : ^^^^
>console.log : (...data: any[]) => void
>            : ^^^^    ^^     ^^^^^    
>console : Console
>        : ^^^^^^^
>log : (...data: any[]) => void
>    : ^^^^    ^^     ^^^^^    
>"ok" : "ok"
>     : ^^^^
}

function f2(
>f2 : (a: number | string | undefined, required?: unknown) => void
>   : ^ ^^                           ^^        ^^^       ^^^^^^^^^

  a: number | string | undefined,
>a : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^

  required: unknown = (() => {
>required : unknown
>         : ^^^^^^^
>(() => {    a = 1;  })() : void
>                         : ^^^^
>(() => {    a = 1;  }) : () => void
>                       : ^^^^^^^^^^
>() => {    a = 1;  } : () => void
>                     : ^^^^^^^^^^

    a = 1;
>a = 1 : number
>      : ^^^^^^
>a : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>1 : number
>  : ^^^^^^

  })()
) {
  a; // should be number | string | undefined
>a : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
}

function f3(
>f3 : (a?: number | string | undefined, required?: unknown) => void
>   : ^ ^^^                           ^^        ^^^       ^^^^^^^^^

  a: number | string | undefined = 1,
>a : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>1 : number
>  : ^^^^^^

  required: unknown = (() => {
>required : unknown
>         : ^^^^^^^
>(() => {    a = "";  })() : void
>                          : ^^^^
>(() => {    a = "";  }) : () => void
>                        : ^^^^^^^^^^
>() => {    a = "";  } : () => void
>                      : ^^^^^^^^^^

    a = "";
>a = "" : string
>       : ^^^^^^
>a : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"" : string
>   : ^^^^^^

  })()
) {
  a; // should be number | string
>a : string | number
>  : ^^^^^^^^^^^^^^^
}

function f4(
>f4 : (a?: number | string | undefined, { [(a = "")]: b }?: any) => void
>   : ^ ^^^                           ^^                 ^^^   ^^^^^^^^^

  a: number | string | undefined = 1,
>a : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>1 : number
>  : ^^^^^^

  { [(a = "")]: b } = {} as any
>(a = "") : string
>         : ^^^^^^
>a = "" : string
>       : ^^^^^^
>a : string | number | undefined
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>"" : string
>   : ^^^^^^
>b : any
>  : ^^^
>{} as any : any
>{} : {}
>   : ^^

) {
  a; // should be string
>a : string
>  : ^^^^^^
}

