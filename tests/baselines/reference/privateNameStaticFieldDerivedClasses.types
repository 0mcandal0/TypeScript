//// [tests/cases/conformance/classes/members/privateNames/privateNameStaticFieldDerivedClasses.ts] ////

=== privateNameStaticFieldDerivedClasses.ts ===
class Base {
>Base : Base
>     : ^^^^

    static #prop: number = 123;
>#prop : number
>      : ^^^^^^
>123 : number
>    : ^^^^^^

    static method(x: Derived) {
>method : (x: Derived) => void
>       : ^ ^^       ^^^^^^^^^
>x : Derived
>  : ^^^^^^^

        Derived.#derivedProp // error
>Derived.#derivedProp : any
>                     : ^^^
>Derived : typeof Derived
>        : ^^^^^^^^^^^^^^

        Base.#prop  = 10;
>Base.#prop  = 10 : number
>                 : ^^^^^^
>Base.#prop : number
>           : ^^^^^^
>Base : typeof Base
>     : ^^^^^^^^^^^
>10 : number
>   : ^^^^^^
    }
}
class Derived extends Base {
>Derived : Derived
>        : ^^^^^^^
>Base : Base
>     : ^^^^

    static #derivedProp: number = 10;
>#derivedProp : number
>             : ^^^^^^
>10 : number
>   : ^^^^^^

    static method(x: Derived) {
>method : (x: Derived) => void
>       : ^ ^^       ^^^^^^^^^
>x : Derived
>  : ^^^^^^^

        Derived.#derivedProp
>Derived.#derivedProp : number
>                     : ^^^^^^
>Derived : typeof Derived
>        : ^^^^^^^^^^^^^^

        Base.#prop  = 10; // error
>Base.#prop  = 10 : 10
>                 : ^^
>Base.#prop : any
>           : ^^^
>Base : typeof Base
>     : ^^^^^^^^^^^
>10 : 10
>   : ^^
    }
}


