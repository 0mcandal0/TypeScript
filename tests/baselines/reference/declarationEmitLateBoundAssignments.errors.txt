declarationEmitLateBoundAssignments.ts(4,1): error TS7022: 'foo[_private]' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
declarationEmitLateBoundAssignments.ts(6,1): error TS7022: 'foo[strMem]' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
declarationEmitLateBoundAssignments.ts(8,1): error TS7022: 'foo[dashStrMem]' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
declarationEmitLateBoundAssignments.ts(10,1): error TS7022: 'foo[numMem]' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.


==== declarationEmitLateBoundAssignments.ts (4 errors) ====
    export function foo() {}
    foo.bar = 12;
    const _private = Symbol();
    foo[_private] = "ok";
    ~~~~~~~~~~~~~~~~~~~~
!!! error TS7022: 'foo[_private]' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
    const strMem = "strMemName";
    foo[strMem] = "ok";
    ~~~~~~~~~~~~~~~~~~
!!! error TS7022: 'foo[strMem]' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
    const dashStrMem = "dashed-str-mem";
    foo[dashStrMem] = "ok";
    ~~~~~~~~~~~~~~~~~~~~~~
!!! error TS7022: 'foo[dashStrMem]' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
    const numMem = 42;
    foo[numMem] = "ok";
    ~~~~~~~~~~~~~~~~~~
!!! error TS7022: 'foo[numMem]' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
    
    const x: string = foo[_private];
    const y: string = foo[strMem];
    const z: string = foo[numMem];
    const a: string = foo[dashStrMem];