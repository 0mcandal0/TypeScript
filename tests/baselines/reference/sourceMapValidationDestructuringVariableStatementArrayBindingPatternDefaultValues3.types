//// [tests/cases/compiler/sourceMapValidationDestructuringVariableStatementArrayBindingPatternDefaultValues3.ts] ////

=== sourceMapValidationDestructuringVariableStatementArrayBindingPatternDefaultValues3.ts ===
declare var console: {
>console : { log(msg: any): void; }
>        : ^^^^^^   ^^   ^^^    ^^^

    log(msg: any): void;
>log : (msg: any) => void
>    : ^   ^^   ^^^^^    
>msg : any
}
type Robot = [number, string, string];
>Robot : Robot
>      : ^^^^^

type MultiSkilledRobot = [string, string[]];
>MultiSkilledRobot : MultiSkilledRobot
>                  : ^^^^^^^^^^^^^^^^^

var robotA: Robot = [1, "mower", "mowing"];
>robotA : Robot
>       : ^^^^^
>[1, "mower", "mowing"] : [number, string, string]
>                       : ^^^^^^^^^^^^^^^^^^^^^^^^
>1 : number
>  : ^^^^^^
>"mower" : string
>        : ^^^^^^
>"mowing" : string
>         : ^^^^^^

var robotB: Robot = [2, "trimmer", "trimming"];
>robotB : Robot
>       : ^^^^^
>[2, "trimmer", "trimming"] : [number, string, string]
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^
>2 : number
>  : ^^^^^^
>"trimmer" : string
>          : ^^^^^^
>"trimming" : string
>           : ^^^^^^

var multiRobotA: MultiSkilledRobot = ["mower", ["mowing", ""]];
>multiRobotA : MultiSkilledRobot
>            : ^^^^^^^^^^^^^^^^^
>["mower", ["mowing", ""]] : [string, string[]]
>                          : ^^^^^^^^^^^^^^^^^^
>"mower" : string
>        : ^^^^^^
>["mowing", ""] : string[]
>               : ^^^^^^^^
>"mowing" : string
>         : ^^^^^^
>"" : string
>   : ^^^^^^

var multiRobotB: MultiSkilledRobot = ["trimmer", ["trimming", "edging"]];
>multiRobotB : MultiSkilledRobot
>            : ^^^^^^^^^^^^^^^^^
>["trimmer", ["trimming", "edging"]] : [string, string[]]
>                                    : ^^^^^^^^^^^^^^^^^^
>"trimmer" : string
>          : ^^^^^^
>["trimming", "edging"] : string[]
>                       : ^^^^^^^^
>"trimming" : string
>           : ^^^^^^
>"edging" : string
>         : ^^^^^^

let nameA: string, numberB: number, nameB: string, skillB: string;
>nameA : string
>      : ^^^^^^
>numberB : number
>        : ^^^^^^
>nameB : string
>      : ^^^^^^
>skillB : string
>       : ^^^^^^

let robotAInfo: (number | string)[];
>robotAInfo : (string | number)[]
>           : ^^^^^^^^^^^^^^^^^^^

let multiSkillB: string[], nameMB: string, primarySkillB: string, secondarySkillB: string;
>multiSkillB : string[]
>            : ^^^^^^^^
>nameMB : string
>       : ^^^^^^
>primarySkillB : string
>              : ^^^^^^
>secondarySkillB : string
>                : ^^^^^^

let multiRobotAInfo: (string | string[])[];
>multiRobotAInfo : (string | string[])[]
>                : ^^^^^^^^^^^^^^^^^^^^^

[, nameA = "helloNoName"] = robotA;
>[, nameA = "helloNoName"] = robotA : Robot
>                                   : ^^^^^
>[, nameA = "helloNoName"] : [undefined, string]
>                          : ^^^^^^^^^^^^^^^^^^^
> : undefined
> : ^^^^^^^^^
>nameA = "helloNoName" : string
>                      : ^^^^^^
>nameA : string
>      : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>robotA : Robot
>       : ^^^^^

[, nameB = "helloNoName"] = getRobotB();
>[, nameB = "helloNoName"] = getRobotB() : Robot
>                                        : ^^^^^
>[, nameB = "helloNoName"] : [undefined, string]
>                          : ^^^^^^^^^^^^^^^^^^^
> : undefined
> : ^^^^^^^^^
>nameB = "helloNoName" : string
>                      : ^^^^^^
>nameB : string
>      : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>getRobotB() : Robot
>            : ^^^^^
>getRobotB : () => Robot
>          : ^^^^^^^^^^^

[, nameB = "helloNoName"] = [2, "trimmer", "trimming"];
>[, nameB = "helloNoName"] = [2, "trimmer", "trimming"] : [number, string, string]
>                                                       : ^^^^^^^^^^^^^^^^^^^^^^^^
>[, nameB = "helloNoName"] : [undefined, string]
>                          : ^^^^^^^^^^^^^^^^^^^
> : undefined
> : ^^^^^^^^^
>nameB = "helloNoName" : string
>                      : ^^^^^^
>nameB : string
>      : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>[2, "trimmer", "trimming"] : [number, string, string]
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^
>2 : number
>  : ^^^^^^
>"trimmer" : string
>          : ^^^^^^
>"trimming" : "trimming"
>           : ^^^^^^^^^^

[, multiSkillB = []] = multiRobotB;
>[, multiSkillB = []] = multiRobotB : MultiSkilledRobot
>                                   : ^^^^^^^^^^^^^^^^^
>[, multiSkillB = []] : [undefined, undefined[]]
>                     : ^^^^^^^^^^^^^^^^^^^^^^^^
> : undefined
> : ^^^^^^^^^
>multiSkillB = [] : undefined[]
>                 : ^^^^^^^^^^^
>multiSkillB : string[]
>            : ^^^^^^^^
>[] : undefined[]
>   : ^^^^^^^^^^^
>multiRobotB : MultiSkilledRobot
>            : ^^^^^^^^^^^^^^^^^

[, multiSkillB = []] = getMultiRobotB();
>[, multiSkillB = []] = getMultiRobotB() : MultiSkilledRobot
>                                        : ^^^^^^^^^^^^^^^^^
>[, multiSkillB = []] : [undefined, undefined[]]
>                     : ^^^^^^^^^^^^^^^^^^^^^^^^
> : undefined
> : ^^^^^^^^^
>multiSkillB = [] : undefined[]
>                 : ^^^^^^^^^^^
>multiSkillB : string[]
>            : ^^^^^^^^
>[] : undefined[]
>   : ^^^^^^^^^^^
>getMultiRobotB() : MultiSkilledRobot
>                 : ^^^^^^^^^^^^^^^^^
>getMultiRobotB : () => MultiSkilledRobot
>               : ^^^^^^^^^^^^^^^^^^^^^^^

[, multiSkillB = []] = ["roomba", ["vacuum", "mopping"]];
>[, multiSkillB = []] = ["roomba", ["vacuum", "mopping"]] : [string, string[]]
>                                                         : ^^^^^^^^^^^^^^^^^^
>[, multiSkillB = []] : [undefined, undefined[]]
>                     : ^^^^^^^^^^^^^^^^^^^^^^^^
> : undefined
> : ^^^^^^^^^
>multiSkillB = [] : undefined[]
>                 : ^^^^^^^^^^^
>multiSkillB : string[]
>            : ^^^^^^^^
>[] : undefined[]
>   : ^^^^^^^^^^^
>["roomba", ["vacuum", "mopping"]] : [string, string[]]
>                                  : ^^^^^^^^^^^^^^^^^^
>"roomba" : string
>         : ^^^^^^
>["vacuum", "mopping"] : string[]
>                      : ^^^^^^^^
>"vacuum" : string
>         : ^^^^^^
>"mopping" : string
>          : ^^^^^^

[numberB = -1] = robotB;
>[numberB = -1] = robotB : Robot
>                        : ^^^^^
>[numberB = -1] : [number]
>               : ^^^^^^^^
>numberB = -1 : -1
>             : ^^
>numberB : number
>        : ^^^^^^
>-1 : -1
>   : ^^
>1 : 1
>  : ^
>robotB : Robot
>       : ^^^^^

[numberB = -1] = getRobotB();
>[numberB = -1] = getRobotB() : Robot
>                             : ^^^^^
>[numberB = -1] : [number]
>               : ^^^^^^^^
>numberB = -1 : -1
>             : ^^
>numberB : number
>        : ^^^^^^
>-1 : -1
>   : ^^
>1 : 1
>  : ^
>getRobotB() : Robot
>            : ^^^^^
>getRobotB : () => Robot
>          : ^^^^^^^^^^^

[numberB = -1] = [2, "trimmer", "trimming"];
>[numberB = -1] = [2, "trimmer", "trimming"] : [number, string, string]
>                                            : ^^^^^^^^^^^^^^^^^^^^^^^^
>[numberB = -1] : [number]
>               : ^^^^^^^^
>numberB = -1 : -1
>             : ^^
>numberB : number
>        : ^^^^^^
>-1 : -1
>   : ^^
>1 : 1
>  : ^
>[2, "trimmer", "trimming"] : [number, string, string]
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^
>2 : number
>  : ^^^^^^
>"trimmer" : "trimmer"
>          : ^^^^^^^^^
>"trimming" : "trimming"
>           : ^^^^^^^^^^

[nameMB = "helloNoName"] = multiRobotB;
>[nameMB = "helloNoName"] = multiRobotB : MultiSkilledRobot
>                                       : ^^^^^^^^^^^^^^^^^
>[nameMB = "helloNoName"] : [string]
>                         : ^^^^^^^^
>nameMB = "helloNoName" : string
>                       : ^^^^^^
>nameMB : string
>       : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>multiRobotB : MultiSkilledRobot
>            : ^^^^^^^^^^^^^^^^^

[nameMB = "helloNoName"] = getMultiRobotB();
>[nameMB = "helloNoName"] = getMultiRobotB() : MultiSkilledRobot
>                                            : ^^^^^^^^^^^^^^^^^
>[nameMB = "helloNoName"] : [string]
>                         : ^^^^^^^^
>nameMB = "helloNoName" : string
>                       : ^^^^^^
>nameMB : string
>       : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>getMultiRobotB() : MultiSkilledRobot
>                 : ^^^^^^^^^^^^^^^^^
>getMultiRobotB : () => MultiSkilledRobot
>               : ^^^^^^^^^^^^^^^^^^^^^^^

[nameMB = "helloNoName"] = ["trimmer", ["trimming", "edging"]];
>[nameMB = "helloNoName"] = ["trimmer", ["trimming", "edging"]] : [string, string[]]
>                                                               : ^^^^^^^^^^^^^^^^^^
>[nameMB = "helloNoName"] : [string]
>                         : ^^^^^^^^
>nameMB = "helloNoName" : string
>                       : ^^^^^^
>nameMB : string
>       : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>["trimmer", ["trimming", "edging"]] : [string, string[]]
>                                    : ^^^^^^^^^^^^^^^^^^
>"trimmer" : string
>          : ^^^^^^
>["trimming", "edging"] : string[]
>                       : ^^^^^^^^
>"trimming" : "trimming"
>           : ^^^^^^^^^^
>"edging" : "edging"
>         : ^^^^^^^^

[numberB = -1, nameB = "helloNoName", skillB = "noSkill"] = robotB;
>[numberB = -1, nameB = "helloNoName", skillB = "noSkill"] = robotB : Robot
>                                                                   : ^^^^^
>[numberB = -1, nameB = "helloNoName", skillB = "noSkill"] : [number, string, string]
>                                                          : ^^^^^^^^^^^^^^^^^^^^^^^^
>numberB = -1 : -1
>             : ^^
>numberB : number
>        : ^^^^^^
>-1 : -1
>   : ^^
>1 : 1
>  : ^
>nameB = "helloNoName" : string
>                      : ^^^^^^
>nameB : string
>      : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>skillB = "noSkill" : string
>                   : ^^^^^^
>skillB : string
>       : ^^^^^^
>"noSkill" : string
>          : ^^^^^^
>robotB : Robot
>       : ^^^^^

[numberB = -1, nameB = "helloNoName", skillB = "noSkill"] = getRobotB();
>[numberB = -1, nameB = "helloNoName", skillB = "noSkill"] = getRobotB() : Robot
>                                                                        : ^^^^^
>[numberB = -1, nameB = "helloNoName", skillB = "noSkill"] : [number, string, string]
>                                                          : ^^^^^^^^^^^^^^^^^^^^^^^^
>numberB = -1 : -1
>             : ^^
>numberB : number
>        : ^^^^^^
>-1 : -1
>   : ^^
>1 : 1
>  : ^
>nameB = "helloNoName" : string
>                      : ^^^^^^
>nameB : string
>      : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>skillB = "noSkill" : string
>                   : ^^^^^^
>skillB : string
>       : ^^^^^^
>"noSkill" : string
>          : ^^^^^^
>getRobotB() : Robot
>            : ^^^^^
>getRobotB : () => Robot
>          : ^^^^^^^^^^^

[numberB = -1, nameB = "helloNoName", skillB = "noSkill"] = [2, "trimmer", "trimming"];
>[numberB = -1, nameB = "helloNoName", skillB = "noSkill"] = [2, "trimmer", "trimming"] : [number, string, string]
>                                                                                       : ^^^^^^^^^^^^^^^^^^^^^^^^
>[numberB = -1, nameB = "helloNoName", skillB = "noSkill"] : [number, string, string]
>                                                          : ^^^^^^^^^^^^^^^^^^^^^^^^
>numberB = -1 : -1
>             : ^^
>numberB : number
>        : ^^^^^^
>-1 : -1
>   : ^^
>1 : 1
>  : ^
>nameB = "helloNoName" : string
>                      : ^^^^^^
>nameB : string
>      : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>skillB = "noSkill" : string
>                   : ^^^^^^
>skillB : string
>       : ^^^^^^
>"noSkill" : string
>          : ^^^^^^
>[2, "trimmer", "trimming"] : [number, string, string]
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^
>2 : number
>  : ^^^^^^
>"trimmer" : string
>          : ^^^^^^
>"trimming" : string
>           : ^^^^^^

[nameMB = "helloNoName", [primarySkillB = "noSkill", secondarySkillB = "noSkill"] = []] = multiRobotB;
>[nameMB = "helloNoName", [primarySkillB = "noSkill", secondarySkillB = "noSkill"] = []] = multiRobotB : MultiSkilledRobot
>                                                                                                      : ^^^^^^^^^^^^^^^^^
>[nameMB = "helloNoName", [primarySkillB = "noSkill", secondarySkillB = "noSkill"] = []] : [string, []]
>                                                                                        : ^^^^^^^^^^^^
>nameMB = "helloNoName" : string
>                       : ^^^^^^
>nameMB : string
>       : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>[primarySkillB = "noSkill", secondarySkillB = "noSkill"] = [] : []
>                                                              : ^^
>[primarySkillB = "noSkill", secondarySkillB = "noSkill"] : [string, string]
>                                                         : ^^^^^^^^^^^^^^^^
>primarySkillB = "noSkill" : string
>                          : ^^^^^^
>primarySkillB : string
>              : ^^^^^^
>"noSkill" : string
>          : ^^^^^^
>secondarySkillB = "noSkill" : string
>                            : ^^^^^^
>secondarySkillB : string
>                : ^^^^^^
>"noSkill" : string
>          : ^^^^^^
>[] : []
>   : ^^
>multiRobotB : MultiSkilledRobot
>            : ^^^^^^^^^^^^^^^^^

[nameMB = "helloNoName", [primarySkillB = "noSkill", secondarySkillB = "noSkill"] = []] = getMultiRobotB();
>[nameMB = "helloNoName", [primarySkillB = "noSkill", secondarySkillB = "noSkill"] = []] = getMultiRobotB() : MultiSkilledRobot
>                                                                                                           : ^^^^^^^^^^^^^^^^^
>[nameMB = "helloNoName", [primarySkillB = "noSkill", secondarySkillB = "noSkill"] = []] : [string, []]
>                                                                                        : ^^^^^^^^^^^^
>nameMB = "helloNoName" : string
>                       : ^^^^^^
>nameMB : string
>       : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>[primarySkillB = "noSkill", secondarySkillB = "noSkill"] = [] : []
>                                                              : ^^
>[primarySkillB = "noSkill", secondarySkillB = "noSkill"] : [string, string]
>                                                         : ^^^^^^^^^^^^^^^^
>primarySkillB = "noSkill" : string
>                          : ^^^^^^
>primarySkillB : string
>              : ^^^^^^
>"noSkill" : string
>          : ^^^^^^
>secondarySkillB = "noSkill" : string
>                            : ^^^^^^
>secondarySkillB : string
>                : ^^^^^^
>"noSkill" : string
>          : ^^^^^^
>[] : []
>   : ^^
>getMultiRobotB() : MultiSkilledRobot
>                 : ^^^^^^^^^^^^^^^^^
>getMultiRobotB : () => MultiSkilledRobot
>               : ^^^^^^^^^^^^^^^^^^^^^^^

[nameMB = "helloNoName", [primarySkillB = "noSkill", secondarySkillB = "noSkill"] = []] =
>[nameMB = "helloNoName", [primarySkillB = "noSkill", secondarySkillB = "noSkill"] = []] =    ["trimmer", ["trimming", "edging"]] : [string, [string, string]]
>                                                                                                                                 : ^^^^^^^^^^^^^^^^^^^^^^^^^^
>[nameMB = "helloNoName", [primarySkillB = "noSkill", secondarySkillB = "noSkill"] = []] : [string, []]
>                                                                                        : ^^^^^^^^^^^^
>nameMB = "helloNoName" : string
>                       : ^^^^^^
>nameMB : string
>       : ^^^^^^
>"helloNoName" : string
>              : ^^^^^^
>[primarySkillB = "noSkill", secondarySkillB = "noSkill"] = [] : []
>                                                              : ^^
>[primarySkillB = "noSkill", secondarySkillB = "noSkill"] : [string, string]
>                                                         : ^^^^^^^^^^^^^^^^
>primarySkillB = "noSkill" : string
>                          : ^^^^^^
>primarySkillB : string
>              : ^^^^^^
>"noSkill" : string
>          : ^^^^^^
>secondarySkillB = "noSkill" : string
>                            : ^^^^^^
>secondarySkillB : string
>                : ^^^^^^
>"noSkill" : string
>          : ^^^^^^
>[] : []
>   : ^^

    ["trimmer", ["trimming", "edging"]];
>["trimmer", ["trimming", "edging"]] : [string, [string, string]]
>                                    : ^^^^^^^^^^^^^^^^^^^^^^^^^^
>"trimmer" : string
>          : ^^^^^^
>["trimming", "edging"] : [string, string]
>                       : ^^^^^^^^^^^^^^^^
>"trimming" : "trimming"
>           : ^^^^^^^^^^
>"edging" : "edging"
>         : ^^^^^^^^

[numberB = -1, ...robotAInfo] = robotB;
>[numberB = -1, ...robotAInfo] = robotB : Robot
>                                       : ^^^^^
>[numberB = -1, ...robotAInfo] : [number, ...(string | number)[]]
>                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>numberB = -1 : -1
>             : ^^
>numberB : number
>        : ^^^^^^
>-1 : -1
>   : ^^
>1 : 1
>  : ^
>...robotAInfo : string | number
>              : ^^^^^^^^^^^^^^^
>robotAInfo : (string | number)[]
>           : ^^^^^^^^^^^^^^^^^^^
>robotB : Robot
>       : ^^^^^

[numberB = -1, ...robotAInfo] = getRobotB();
>[numberB = -1, ...robotAInfo] = getRobotB() : Robot
>                                            : ^^^^^
>[numberB = -1, ...robotAInfo] : [number, ...(string | number)[]]
>                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>numberB = -1 : -1
>             : ^^
>numberB : number
>        : ^^^^^^
>-1 : -1
>   : ^^
>1 : 1
>  : ^
>...robotAInfo : string | number
>              : ^^^^^^^^^^^^^^^
>robotAInfo : (string | number)[]
>           : ^^^^^^^^^^^^^^^^^^^
>getRobotB() : Robot
>            : ^^^^^
>getRobotB : () => Robot
>          : ^^^^^^^^^^^

[numberB = -1, ...robotAInfo] = <Robot>[2, "trimmer", "trimming"];
>[numberB = -1, ...robotAInfo] = <Robot>[2, "trimmer", "trimming"] : Robot
>                                                                  : ^^^^^
>[numberB = -1, ...robotAInfo] : [number, ...(string | number)[]]
>                              : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>numberB = -1 : -1
>             : ^^
>numberB : number
>        : ^^^^^^
>-1 : -1
>   : ^^
>1 : 1
>  : ^
>...robotAInfo : string | number
>              : ^^^^^^^^^^^^^^^
>robotAInfo : (string | number)[]
>           : ^^^^^^^^^^^^^^^^^^^
><Robot>[2, "trimmer", "trimming"] : Robot
>                                  : ^^^^^
>[2, "trimmer", "trimming"] : [number, string, string]
>                           : ^^^^^^^^^^^^^^^^^^^^^^^^
>2 : number
>  : ^^^^^^
>"trimmer" : string
>          : ^^^^^^
>"trimming" : string
>           : ^^^^^^

if (nameA == nameB) {
>nameA == nameB : boolean
>               : ^^^^^^^
>nameA : string
>      : ^^^^^^
>nameB : string
>      : ^^^^^^

    console.log(skillB);
>console.log(skillB) : void
>                    : ^^^^
>console.log : (msg: any) => void
>            : ^   ^^   ^^^^^    
>console : { log(msg: any): void; }
>        : ^^^^^^   ^^   ^^^    ^^^
>log : (msg: any) => void
>    : ^   ^^   ^^^^^    
>skillB : string
>       : ^^^^^^
}

function getRobotB() {
>getRobotB : () => Robot
>          : ^^^^^^^^^^^

    return robotB;
>robotB : Robot
>       : ^^^^^
}

function getMultiRobotB() {
>getMultiRobotB : () => MultiSkilledRobot
>               : ^^^^^^^^^^^^^^^^^^^^^^^

    return multiRobotB;
>multiRobotB : MultiSkilledRobot
>            : ^^^^^^^^^^^^^^^^^
}
