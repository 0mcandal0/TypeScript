//// [tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_asConstArrays.ts] ////

=== typeSatisfaction_asConstArrays.ts ===
// with readonly array
const arr1 = [1, 2, 3] as const satisfies readonly unknown[]
>arr1 : readonly [number, number, number]
>     : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>[1, 2, 3] as const satisfies readonly unknown[] : readonly [number, number, number]
>                                                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>[1, 2, 3] as const : readonly [number, number, number]
>                   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>[1, 2, 3] : readonly [number, number, number]
>          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>1 : number
>  : ^^^^^^
>2 : number
>  : ^^^^^^
>3 : number
>  : ^^^^^^

// with mutable array
const arr2 = [1, 2, 3] as const satisfies unknown[]
>arr2 : [number, number, number]
>     : ^^^^^^^^^^^^^^^^^^^^^^^^
>[1, 2, 3] as const satisfies unknown[] : [number, number, number]
>                                       : ^^^^^^^^^^^^^^^^^^^^^^^^
>[1, 2, 3] as const : [number, number, number]
>                   : ^^^^^^^^^^^^^^^^^^^^^^^^
>[1, 2, 3] : [number, number, number]
>          : ^^^^^^^^^^^^^^^^^^^^^^^^
>1 : number
>  : ^^^^^^
>2 : number
>  : ^^^^^^
>3 : number
>  : ^^^^^^

