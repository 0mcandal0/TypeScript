circularConstructorWithReturn.ts(3,13): error TS2456: Type alias 'Client' circularly references itself.
circularConstructorWithReturn.ts(7,5): error TS2502: 'self' is referenced directly or indirectly in its own type annotation.
circularConstructorWithReturn.ts(16,48): error TS2502: 'client' is referenced directly or indirectly in its own type annotation.


==== circularConstructorWithReturn.ts (3 errors) ====
    // This should not be a circularity error. See
    // https://github.com/microsoft/TypeScript/pull/57465#issuecomment-1960271216
    export type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never
                ~~~~~~
!!! error TS2456: Type alias 'Client' circularly references itself.
    
    export function getPrismaClient(options?: any) {
      class PrismaClient {
        self: Client;
        ~~~~
!!! error TS2502: 'self' is referenced directly or indirectly in its own type annotation.
        constructor(options?: any) {
          return (this.self = applyModelsAndClientExtensions(this));
        }
      }
    
      return PrismaClient
    }
    
    export function applyModelsAndClientExtensions(client: Client) {
                                                   ~~~~~~~~~~~~~~
!!! error TS2502: 'client' is referenced directly or indirectly in its own type annotation.
      return client;
    }
    