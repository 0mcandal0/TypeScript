//// [tests/cases/compiler/dependentReturnType2.ts] ////

=== dependentReturnType2.ts ===
// If during narrowing, one of the conditional types in the distribution doesn't narrow, then the whole type will not be narrowed
function whoKnows<T extends string | number | undefined>(x: T): T extends true ? 1 : T extends false ? 2 : 3 {
>whoKnows : <T extends string | number | undefined>(x: T) => T extends true ? 1 : T extends false ? 2 : 3
>x : T
>true : true
>false : false

    if (typeof x !== "string") {
>typeof x !== "string" : boolean
>typeof x : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
>x : T
>"string" : "string"

        return 3;
>3 : 3
    }
}
